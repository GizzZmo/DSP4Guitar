name: Release

on:
  release:
    types: [created]
  workflow_dispatch:

jobs:
  build-release:
    name: Build Release for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive
        
    - name: Set up environment (Ubuntu)
      if: runner.os == 'Linux'
      run: |
        sudo add-apt-repository universe
        sudo apt-get update
        sudo apt-get install -y \
          libasound2-dev \
          libjack-jackd2-dev \
          libcurl4-openssl-dev \
          libfreetype6-dev \
          libx11-dev \
          libxcomposite-dev \
          libxcursor-dev \
          libxinerama-dev \
          libxrandr-dev \
          libxrender-dev \
          libwebkit2gtk-4.0-dev \
          libglu1-mesa-dev \
          mesa-common-dev
          
    - name: Download JUCE
      run: |
        git clone --depth 1 --branch 7.0.9 https://github.com/juce-framework/JUCE.git
        
    - name: Configure CMake
      run: cmake -B build -DCMAKE_BUILD_TYPE=Release
      
    - name: Build
      run: cmake --build build --config Release
      
    - name: Package (Linux)
      if: runner.os == 'Linux'
      run: |
        mkdir -p release/DSP4Guitar-Linux
        cp -r build/*_artefacts/Release/VST3/*.vst3 release/DSP4Guitar-Linux/ || true
        cp README.md LICENSE release/DSP4Guitar-Linux/ || true
        cd release
        tar -czf DSP4Guitar-Linux.tar.gz DSP4Guitar-Linux
        
    - name: Package (macOS)
      if: runner.os == 'macOS'
      run: |
        mkdir -p release/DSP4Guitar-macOS
        cp -r build/*_artefacts/Release/VST3/*.vst3 release/DSP4Guitar-macOS/ || true
        cp -r build/*_artefacts/Release/AU/*.component release/DSP4Guitar-macOS/ || true
        cp README.md LICENSE release/DSP4Guitar-macOS/ || true
        cd release
        zip -r DSP4Guitar-macOS.zip DSP4Guitar-macOS
        
    - name: Package (Windows)
      if: runner.os == 'Windows'
      run: |
        mkdir release\DSP4Guitar-Windows
        Copy-Item -Path "build\*_artefacts\Release\VST3\*.vst3" -Destination "release\DSP4Guitar-Windows\" -Recurse -ErrorAction SilentlyContinue
        Copy-Item README.md, LICENSE release\DSP4Guitar-Windows\ -ErrorAction SilentlyContinue
        cd release
        Compress-Archive -Path DSP4Guitar-Windows -DestinationPath DSP4Guitar-Windows.zip
      shell: pwsh
        
    - name: Upload Release Assets (Linux)
      if: runner.os == 'Linux' && github.event_name == 'release'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./release/DSP4Guitar-Linux.tar.gz
        asset_name: DSP4Guitar-Linux.tar.gz
        asset_content_type: application/gzip
        
    - name: Upload Release Assets (macOS)
      if: runner.os == 'macOS' && github.event_name == 'release'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./release/DSP4Guitar-macOS.zip
        asset_name: DSP4Guitar-macOS.zip
        asset_content_type: application/zip
        
    - name: Upload Release Assets (Windows)
      if: runner.os == 'Windows' && github.event_name == 'release'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./release/DSP4Guitar-Windows.zip
        asset_name: DSP4Guitar-Windows.zip
        asset_content_type: application/zip
